# -*- coding: utf-8 -*-
"""LVADSUSR151_DHEERAJ_lab1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19OdygYnpbkuyBz0Jcx8Vl4PgkwMg90wv
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import confusion_matrix, classification_report
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.model_selection import train_test_split

df = pd.read_csv('/content/winequality-red.csv')

df.head()

sns.heatmap(df.corr(),linewidths=1)

df.info()

df.isnull().sum()

df.dropna(inplace=True)

df.isnull().sum()

"""now there is no null values thus ready for modeling.

"""

# Preprocessing Data
bins = (2, 6.5, 8)
group_names = ['bad','good']
df['quality'] = pd.cut(df['quality'], bins = bins, labels = group_names)

df['quality'].unique()

df.head()

lable = LabelEncoder()

df['quality'] = lable.fit_transform(df['quality'])
df['quality'].value_counts()
sns.scatterplot(x =df['alcohol'],y = df['quality'])
x = df.drop('quality', axis = 1)
y = df['quality']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state=42)

# Applying Standard Scaler to get optimized result
scaler = StandardScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.fit_transform(x_test)

x_train[:10]

model = RandomForestClassifier(n_estimators=200)
model.fit(x_train, y_train)
prediction = model.predict(x_test)

# Rfc Model performance
print(classification_report(y_test, pred_rfc))

print(confusion_matrix(y_test, pred_rfc))

import matplotlib.pyplot as plt
cm = confusion_matrix(y_test, pred_rfc)
labels = ['Bad', 'Good']

fig, ax = plt.subplots(figsize=(5, 5))
sns.heatmap(cm, annot=True, linewidth=0.6, linecolor="r", fmt=".0f", ax=ax)

ax.set_xticklabels(labels)
ax.set_yticklabels(labels)

